{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","universlogique-pg/tests/lint/app.lint-test.js","universlogique-pg/tests/lint/tests.lint-test.js","universlogique-pg/tests/test-helper.js","vendor/ember-cli/app-config.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define(\"universlogique-pg/tests/lint/app.lint-test\", [], function () {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71feaimeta@70e063a35619d71f\n  QUnit.module('ESLint | app');\n  QUnit.test('app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('components/drawing-component.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/drawing-component.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('object/canvas/canvas-data-32.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'object/canvas/canvas-data-32.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('object/math/CComplex.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'object/math/CComplex.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('router.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/page.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/page.js should pass ESLint\\n\\n10:3 - Unexpected console statement. (no-console)');\n  });\n  QUnit.test('services/animation-service.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'services/animation-service.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('services/canvas2d-service.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'services/canvas2d-service.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('services/colors-service.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'services/colors-service.js should pass ESLint\\n\\n');\n  });\n});","define(\"universlogique-pg/tests/lint/tests.lint-test\", [], function () {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71feaimeta@70e063a35619d71f\n  QUnit.module('ESLint | tests');\n  QUnit.test('test-helper.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass ESLint\\n\\n');\n  });\n});","define(\"universlogique-pg/tests/test-helper\", [\"universlogique-pg/app\", \"universlogique-pg/config/environment\", \"qunit\", \"@ember/test-helpers\", \"qunit-dom\", \"ember-qunit\"], function (_app, _environment, QUnit, _testHelpers, _qunitDom, _emberQunit) {\n  \"use strict\";\n\n  0; //eaimeta@70e063a35619d71f0,\"universlogique-pg/app\",0,\"universlogique-pg/config/environment\",0,\"qunit\",0,\"@ember/test-helpers\",0,\"qunit-dom\",0,\"ember-qunit\"eaimeta@70e063a35619d71f\n  (0, _testHelpers.setApplication)(_app.default.create(_environment.default.APP));\n  (0, _qunitDom.setup)(QUnit.assert);\n  (0, _emberQunit.start)();\n});","define('universlogique-pg/config/environment', [], function() {\n  var prefix = 'universlogique-pg';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(decodeURIComponent(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","require('universlogique-pg/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;","file":"tests.js"}